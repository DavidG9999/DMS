// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.12.4
// source: document.proto

package docv1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AutoEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoId      int64  `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`               // Auto ID.
	Brand       string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`                                // Auto brand.
	Model       string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`                                // Auto model.
	StateNumber string `protobuf:"bytes,4,opt,name=state_number,json=stateNumber,proto3" json:"state_number,omitempty"` //Auto state number.
}

func (x *AutoEntity) Reset() {
	*x = AutoEntity{}
	mi := &file_document_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoEntity) ProtoMessage() {}

func (x *AutoEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoEntity.ProtoReflect.Descriptor instead.
func (*AutoEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{0}
}

func (x *AutoEntity) GetAutoId() int64 {
	if x != nil {
		return x.AutoId
	}
	return 0
}

func (x *AutoEntity) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *AutoEntity) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AutoEntity) GetStateNumber() string {
	if x != nil {
		return x.StateNumber
	}
	return ""
}

type CreateAutoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand       string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`                                // Brand of the created auto.
	Model       string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`                                // Model of the created auto.
	StateNumber string `protobuf:"bytes,3,opt,name=state_number,json=stateNumber,proto3" json:"state_number,omitempty"` // State number of the created auto.
}

func (x *CreateAutoRequest) Reset() {
	*x = CreateAutoRequest{}
	mi := &file_document_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAutoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAutoRequest) ProtoMessage() {}

func (x *CreateAutoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAutoRequest.ProtoReflect.Descriptor instead.
func (*CreateAutoRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAutoRequest) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *CreateAutoRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateAutoRequest) GetStateNumber() string {
	if x != nil {
		return x.StateNumber
	}
	return ""
}

type CreateAutoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoId int64 `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"` // ID of the created auto.
}

func (x *CreateAutoResponse) Reset() {
	*x = CreateAutoResponse{}
	mi := &file_document_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAutoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAutoResponse) ProtoMessage() {}

func (x *CreateAutoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAutoResponse.ProtoReflect.Descriptor instead.
func (*CreateAutoResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAutoResponse) GetAutoId() int64 {
	if x != nil {
		return x.AutoId
	}
	return 0
}

type GetAutosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAutosRequest) Reset() {
	*x = GetAutosRequest{}
	mi := &file_document_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAutosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutosRequest) ProtoMessage() {}

func (x *GetAutosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutosRequest.ProtoReflect.Descriptor instead.
func (*GetAutosRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{3}
}

type GetAutosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Autos []*AutoEntity `protobuf:"bytes,1,rep,name=autos,proto3" json:"autos,omitempty"` // List of autos.
}

func (x *GetAutosResponse) Reset() {
	*x = GetAutosResponse{}
	mi := &file_document_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAutosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutosResponse) ProtoMessage() {}

func (x *GetAutosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutosResponse.ProtoReflect.Descriptor instead.
func (*GetAutosResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{4}
}

func (x *GetAutosResponse) GetAutos() []*AutoEntity {
	if x != nil {
		return x.Autos
	}
	return nil
}

type UpdateAutoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoId      int64  `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`               // Auto ID.
	Brand       string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`                                // Auto Brand.
	Model       string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`                                // Auto Model.
	StateNumber string `protobuf:"bytes,4,opt,name=state_number,json=stateNumber,proto3" json:"state_number,omitempty"` // Auto State number.
}

func (x *UpdateAutoRequest) Reset() {
	*x = UpdateAutoRequest{}
	mi := &file_document_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAutoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAutoRequest) ProtoMessage() {}

func (x *UpdateAutoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAutoRequest.ProtoReflect.Descriptor instead.
func (*UpdateAutoRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAutoRequest) GetAutoId() int64 {
	if x != nil {
		return x.AutoId
	}
	return 0
}

func (x *UpdateAutoRequest) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *UpdateAutoRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *UpdateAutoRequest) GetStateNumber() string {
	if x != nil {
		return x.StateNumber
	}
	return ""
}

type UpdateAutoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdateAutoResponse) Reset() {
	*x = UpdateAutoResponse{}
	mi := &file_document_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAutoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAutoResponse) ProtoMessage() {}

func (x *UpdateAutoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAutoResponse.ProtoReflect.Descriptor instead.
func (*UpdateAutoResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAutoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteAutoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoId int64 `protobuf:"varint,1,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"` // Auto ID.
}

func (x *DeleteAutoRequest) Reset() {
	*x = DeleteAutoRequest{}
	mi := &file_document_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAutoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAutoRequest) ProtoMessage() {}

func (x *DeleteAutoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAutoRequest.ProtoReflect.Descriptor instead.
func (*DeleteAutoRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAutoRequest) GetAutoId() int64 {
	if x != nil {
		return x.AutoId
	}
	return 0
}

type DeleteAutoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeleteAutoResponse) Reset() {
	*x = DeleteAutoResponse{}
	mi := &file_document_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAutoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAutoResponse) ProtoMessage() {}

func (x *DeleteAutoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAutoResponse.ProtoReflect.Descriptor instead.
func (*DeleteAutoResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAutoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ContragentEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContragentId int64  `protobuf:"varint,1,opt,name=contragent_id,json=contragentId,proto3" json:"contragent_id,omitempty"` // Contragent ID.
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // Contragent name.
	Address      string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                // Contragent address.
	InnKpp       string `protobuf:"bytes,4,opt,name=inn_kpp,json=innKpp,proto3" json:"inn_kpp,omitempty"`                    // Contragent Inn/Kpp
}

func (x *ContragentEntity) Reset() {
	*x = ContragentEntity{}
	mi := &file_document_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContragentEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContragentEntity) ProtoMessage() {}

func (x *ContragentEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContragentEntity.ProtoReflect.Descriptor instead.
func (*ContragentEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{9}
}

func (x *ContragentEntity) GetContragentId() int64 {
	if x != nil {
		return x.ContragentId
	}
	return 0
}

func (x *ContragentEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContragentEntity) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ContragentEntity) GetInnKpp() string {
	if x != nil {
		return x.InnKpp
	}
	return ""
}

type CreateContragentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                   // Name of the created Contragent.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`             // Address of the created Contragent.
	InnKpp  string `protobuf:"bytes,3,opt,name=inn_kpp,json=innKpp,proto3" json:"inn_kpp,omitempty"` // Inn/Kpp number of the created Contragent.
}

func (x *CreateContragentRequest) Reset() {
	*x = CreateContragentRequest{}
	mi := &file_document_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContragentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContragentRequest) ProtoMessage() {}

func (x *CreateContragentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContragentRequest.ProtoReflect.Descriptor instead.
func (*CreateContragentRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{10}
}

func (x *CreateContragentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateContragentRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateContragentRequest) GetInnKpp() string {
	if x != nil {
		return x.InnKpp
	}
	return ""
}

type CreateContragentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContragentId int64 `protobuf:"varint,1,opt,name=contragent_id,json=contragentId,proto3" json:"contragent_id,omitempty"` // ID of the created Contragent.
}

func (x *CreateContragentResponse) Reset() {
	*x = CreateContragentResponse{}
	mi := &file_document_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContragentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContragentResponse) ProtoMessage() {}

func (x *CreateContragentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContragentResponse.ProtoReflect.Descriptor instead.
func (*CreateContragentResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{11}
}

func (x *CreateContragentResponse) GetContragentId() int64 {
	if x != nil {
		return x.ContragentId
	}
	return 0
}

type GetContragentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetContragentsRequest) Reset() {
	*x = GetContragentsRequest{}
	mi := &file_document_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContragentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContragentsRequest) ProtoMessage() {}

func (x *GetContragentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContragentsRequest.ProtoReflect.Descriptor instead.
func (*GetContragentsRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{12}
}

type GetContragentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contragents []*ContragentEntity `protobuf:"bytes,1,rep,name=contragents,proto3" json:"contragents,omitempty"` // List of Contragents.
}

func (x *GetContragentsResponse) Reset() {
	*x = GetContragentsResponse{}
	mi := &file_document_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContragentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContragentsResponse) ProtoMessage() {}

func (x *GetContragentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContragentsResponse.ProtoReflect.Descriptor instead.
func (*GetContragentsResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{13}
}

func (x *GetContragentsResponse) GetContragents() []*ContragentEntity {
	if x != nil {
		return x.Contragents
	}
	return nil
}

type UpdateContragentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContragentId int64  `protobuf:"varint,1,opt,name=contragent_id,json=contragentId,proto3" json:"contragent_id,omitempty"` // Contragent ID.
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // Contragent Name.
	Address      string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                // Contragent Address.
	InnKpp       string `protobuf:"bytes,4,opt,name=inn_kpp,json=innKpp,proto3" json:"inn_kpp,omitempty"`                    // Contragent Inn/Kpp.
}

func (x *UpdateContragentRequest) Reset() {
	*x = UpdateContragentRequest{}
	mi := &file_document_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContragentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContragentRequest) ProtoMessage() {}

func (x *UpdateContragentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContragentRequest.ProtoReflect.Descriptor instead.
func (*UpdateContragentRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateContragentRequest) GetContragentId() int64 {
	if x != nil {
		return x.ContragentId
	}
	return 0
}

func (x *UpdateContragentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateContragentRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateContragentRequest) GetInnKpp() string {
	if x != nil {
		return x.InnKpp
	}
	return ""
}

type UpdateContragentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdateContragentResponse) Reset() {
	*x = UpdateContragentResponse{}
	mi := &file_document_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContragentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContragentResponse) ProtoMessage() {}

func (x *UpdateContragentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContragentResponse.ProtoReflect.Descriptor instead.
func (*UpdateContragentResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateContragentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteContragentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContragentId int64 `protobuf:"varint,1,opt,name=contragent_id,json=contragentId,proto3" json:"contragent_id,omitempty"` // Contragent ID.
}

func (x *DeleteContragentRequest) Reset() {
	*x = DeleteContragentRequest{}
	mi := &file_document_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContragentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContragentRequest) ProtoMessage() {}

func (x *DeleteContragentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContragentRequest.ProtoReflect.Descriptor instead.
func (*DeleteContragentRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteContragentRequest) GetContragentId() int64 {
	if x != nil {
		return x.ContragentId
	}
	return 0
}

type DeleteContragentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeleteContragentResponse) Reset() {
	*x = DeleteContragentResponse{}
	mi := &file_document_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContragentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContragentResponse) ProtoMessage() {}

func (x *DeleteContragentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContragentResponse.ProtoReflect.Descriptor instead.
func (*DeleteContragentResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteContragentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DispetcherEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DispetcherId int64  `protobuf:"varint,1,opt,name=dispetcher_id,json=dispetcherId,proto3" json:"dispetcher_id,omitempty"` // Dispetcher ID.
	FullName     string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`              // Dispetcher Name.
}

func (x *DispetcherEntity) Reset() {
	*x = DispetcherEntity{}
	mi := &file_document_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispetcherEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispetcherEntity) ProtoMessage() {}

func (x *DispetcherEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispetcherEntity.ProtoReflect.Descriptor instead.
func (*DispetcherEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{18}
}

func (x *DispetcherEntity) GetDispetcherId() int64 {
	if x != nil {
		return x.DispetcherId
	}
	return 0
}

func (x *DispetcherEntity) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type CreateDispetcherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"` // Name of the created Dispetcher.
}

func (x *CreateDispetcherRequest) Reset() {
	*x = CreateDispetcherRequest{}
	mi := &file_document_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDispetcherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDispetcherRequest) ProtoMessage() {}

func (x *CreateDispetcherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDispetcherRequest.ProtoReflect.Descriptor instead.
func (*CreateDispetcherRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{19}
}

func (x *CreateDispetcherRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type CreateDispetcherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DispetcherId int64 `protobuf:"varint,1,opt,name=dispetcher_id,json=dispetcherId,proto3" json:"dispetcher_id,omitempty"` // ID of the created Dispetcher.
}

func (x *CreateDispetcherResponse) Reset() {
	*x = CreateDispetcherResponse{}
	mi := &file_document_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDispetcherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDispetcherResponse) ProtoMessage() {}

func (x *CreateDispetcherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDispetcherResponse.ProtoReflect.Descriptor instead.
func (*CreateDispetcherResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{20}
}

func (x *CreateDispetcherResponse) GetDispetcherId() int64 {
	if x != nil {
		return x.DispetcherId
	}
	return 0
}

type GetDispetchersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDispetchersRequest) Reset() {
	*x = GetDispetchersRequest{}
	mi := &file_document_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDispetchersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDispetchersRequest) ProtoMessage() {}

func (x *GetDispetchersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDispetchersRequest.ProtoReflect.Descriptor instead.
func (*GetDispetchersRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{21}
}

type GetDispetchersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dispetchers []*DispetcherEntity `protobuf:"bytes,1,rep,name=dispetchers,proto3" json:"dispetchers,omitempty"` // List of Dispetchers.
}

func (x *GetDispetchersResponse) Reset() {
	*x = GetDispetchersResponse{}
	mi := &file_document_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDispetchersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDispetchersResponse) ProtoMessage() {}

func (x *GetDispetchersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDispetchersResponse.ProtoReflect.Descriptor instead.
func (*GetDispetchersResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{22}
}

func (x *GetDispetchersResponse) GetDispetchers() []*DispetcherEntity {
	if x != nil {
		return x.Dispetchers
	}
	return nil
}

type UpdateDispetcherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DispetcherId int64  `protobuf:"varint,1,opt,name=dispetcher_id,json=dispetcherId,proto3" json:"dispetcher_id,omitempty"` // Dispetcher ID.
	FullName     string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`              // Dispetcher Name.
}

func (x *UpdateDispetcherRequest) Reset() {
	*x = UpdateDispetcherRequest{}
	mi := &file_document_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDispetcherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDispetcherRequest) ProtoMessage() {}

func (x *UpdateDispetcherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDispetcherRequest.ProtoReflect.Descriptor instead.
func (*UpdateDispetcherRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateDispetcherRequest) GetDispetcherId() int64 {
	if x != nil {
		return x.DispetcherId
	}
	return 0
}

func (x *UpdateDispetcherRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type UpdateDispetcherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdateDispetcherResponse) Reset() {
	*x = UpdateDispetcherResponse{}
	mi := &file_document_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDispetcherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDispetcherResponse) ProtoMessage() {}

func (x *UpdateDispetcherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDispetcherResponse.ProtoReflect.Descriptor instead.
func (*UpdateDispetcherResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateDispetcherResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteDispetcherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DispetcherId int64 `protobuf:"varint,1,opt,name=dispetcher_id,json=dispetcherId,proto3" json:"dispetcher_id,omitempty"` // Dispetcher ID.
}

func (x *DeleteDispetcherRequest) Reset() {
	*x = DeleteDispetcherRequest{}
	mi := &file_document_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDispetcherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDispetcherRequest) ProtoMessage() {}

func (x *DeleteDispetcherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDispetcherRequest.ProtoReflect.Descriptor instead.
func (*DeleteDispetcherRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteDispetcherRequest) GetDispetcherId() int64 {
	if x != nil {
		return x.DispetcherId
	}
	return 0
}

type DeleteDispetcherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeleteDispetcherResponse) Reset() {
	*x = DeleteDispetcherResponse{}
	mi := &file_document_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDispetcherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDispetcherResponse) ProtoMessage() {}

func (x *DeleteDispetcherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDispetcherResponse.ProtoReflect.Descriptor instead.
func (*DeleteDispetcherResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteDispetcherResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MehanicEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MehanicId int64  `protobuf:"varint,1,opt,name=mehanic_id,json=mehanicId,proto3" json:"mehanic_id,omitempty"` // Mehanic ID.
	FullName  string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`     // Mehanic Name.
}

func (x *MehanicEntity) Reset() {
	*x = MehanicEntity{}
	mi := &file_document_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MehanicEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MehanicEntity) ProtoMessage() {}

func (x *MehanicEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MehanicEntity.ProtoReflect.Descriptor instead.
func (*MehanicEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{27}
}

func (x *MehanicEntity) GetMehanicId() int64 {
	if x != nil {
		return x.MehanicId
	}
	return 0
}

func (x *MehanicEntity) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type CreateMehanicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"` // Name of the created Mehanic.
}

func (x *CreateMehanicRequest) Reset() {
	*x = CreateMehanicRequest{}
	mi := &file_document_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMehanicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMehanicRequest) ProtoMessage() {}

func (x *CreateMehanicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMehanicRequest.ProtoReflect.Descriptor instead.
func (*CreateMehanicRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{28}
}

func (x *CreateMehanicRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type CreateMehanicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MehanicId int64 `protobuf:"varint,1,opt,name=mehanic_id,json=mehanicId,proto3" json:"mehanic_id,omitempty"` // ID of the created Mehanic.
}

func (x *CreateMehanicResponse) Reset() {
	*x = CreateMehanicResponse{}
	mi := &file_document_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMehanicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMehanicResponse) ProtoMessage() {}

func (x *CreateMehanicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMehanicResponse.ProtoReflect.Descriptor instead.
func (*CreateMehanicResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{29}
}

func (x *CreateMehanicResponse) GetMehanicId() int64 {
	if x != nil {
		return x.MehanicId
	}
	return 0
}

type GetMehanicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMehanicsRequest) Reset() {
	*x = GetMehanicsRequest{}
	mi := &file_document_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMehanicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMehanicsRequest) ProtoMessage() {}

func (x *GetMehanicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMehanicsRequest.ProtoReflect.Descriptor instead.
func (*GetMehanicsRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{30}
}

type GetMehanicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mehanics []*MehanicEntity `protobuf:"bytes,1,rep,name=mehanics,proto3" json:"mehanics,omitempty"` // List of Mehanics.
}

func (x *GetMehanicsResponse) Reset() {
	*x = GetMehanicsResponse{}
	mi := &file_document_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMehanicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMehanicsResponse) ProtoMessage() {}

func (x *GetMehanicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMehanicsResponse.ProtoReflect.Descriptor instead.
func (*GetMehanicsResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{31}
}

func (x *GetMehanicsResponse) GetMehanics() []*MehanicEntity {
	if x != nil {
		return x.Mehanics
	}
	return nil
}

type UpdateMehanicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MehanicId int64  `protobuf:"varint,1,opt,name=mehanic_id,json=mehanicId,proto3" json:"mehanic_id,omitempty"` // Mehanic ID.
	FullName  string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`     // Mehanic Name.
}

func (x *UpdateMehanicRequest) Reset() {
	*x = UpdateMehanicRequest{}
	mi := &file_document_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMehanicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMehanicRequest) ProtoMessage() {}

func (x *UpdateMehanicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMehanicRequest.ProtoReflect.Descriptor instead.
func (*UpdateMehanicRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateMehanicRequest) GetMehanicId() int64 {
	if x != nil {
		return x.MehanicId
	}
	return 0
}

func (x *UpdateMehanicRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type UpdateMehanicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdateMehanicResponse) Reset() {
	*x = UpdateMehanicResponse{}
	mi := &file_document_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMehanicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMehanicResponse) ProtoMessage() {}

func (x *UpdateMehanicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMehanicResponse.ProtoReflect.Descriptor instead.
func (*UpdateMehanicResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateMehanicResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteMehanicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MehanicId int64 `protobuf:"varint,1,opt,name=mehanic_id,json=mehanicId,proto3" json:"mehanic_id,omitempty"` // Mehanic ID.
}

func (x *DeleteMehanicRequest) Reset() {
	*x = DeleteMehanicRequest{}
	mi := &file_document_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMehanicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMehanicRequest) ProtoMessage() {}

func (x *DeleteMehanicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMehanicRequest.ProtoReflect.Descriptor instead.
func (*DeleteMehanicRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteMehanicRequest) GetMehanicId() int64 {
	if x != nil {
		return x.MehanicId
	}
	return 0
}

type DeleteMehanicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeleteMehanicResponse) Reset() {
	*x = DeleteMehanicResponse{}
	mi := &file_document_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMehanicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMehanicResponse) ProtoMessage() {}

func (x *DeleteMehanicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMehanicResponse.ProtoReflect.Descriptor instead.
func (*DeleteMehanicResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteMehanicResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DriverEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId int64  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"` // Driver ID.
	FullName string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`  // Driver Name.
	License  string `protobuf:"bytes,3,opt,name=license,proto3" json:"license,omitempty"`                    // Driver License.
	Class    string `protobuf:"bytes,4,opt,name=class,proto3" json:"class,omitempty"`                        // Driver Class.
}

func (x *DriverEntity) Reset() {
	*x = DriverEntity{}
	mi := &file_document_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverEntity) ProtoMessage() {}

func (x *DriverEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverEntity.ProtoReflect.Descriptor instead.
func (*DriverEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{36}
}

func (x *DriverEntity) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *DriverEntity) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *DriverEntity) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *DriverEntity) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

type CreateDriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"` // Name of the created Driver.
	License  string `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`                   // License of the created Driver.
	Class    string `protobuf:"bytes,3,opt,name=class,proto3" json:"class,omitempty"`                       // Class of the created Driver.
}

func (x *CreateDriverRequest) Reset() {
	*x = CreateDriverRequest{}
	mi := &file_document_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDriverRequest) ProtoMessage() {}

func (x *CreateDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDriverRequest.ProtoReflect.Descriptor instead.
func (*CreateDriverRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{37}
}

func (x *CreateDriverRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateDriverRequest) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *CreateDriverRequest) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

type CreateDriverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId int64 `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"` // ID of the created Driver.
}

func (x *CreateDriverResponse) Reset() {
	*x = CreateDriverResponse{}
	mi := &file_document_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDriverResponse) ProtoMessage() {}

func (x *CreateDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDriverResponse.ProtoReflect.Descriptor instead.
func (*CreateDriverResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{38}
}

func (x *CreateDriverResponse) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

type GetDriversRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDriversRequest) Reset() {
	*x = GetDriversRequest{}
	mi := &file_document_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriversRequest) ProtoMessage() {}

func (x *GetDriversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriversRequest.ProtoReflect.Descriptor instead.
func (*GetDriversRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{39}
}

type GetDriversResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drivers []*DriverEntity `protobuf:"bytes,1,rep,name=drivers,proto3" json:"drivers,omitempty"` // List of Drivers.
}

func (x *GetDriversResponse) Reset() {
	*x = GetDriversResponse{}
	mi := &file_document_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriversResponse) ProtoMessage() {}

func (x *GetDriversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriversResponse.ProtoReflect.Descriptor instead.
func (*GetDriversResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{40}
}

func (x *GetDriversResponse) GetDrivers() []*DriverEntity {
	if x != nil {
		return x.Drivers
	}
	return nil
}

type UpdateDriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId int64  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"` // Driver ID.
	FullName string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`  // Driver name.
	License  string `protobuf:"bytes,3,opt,name=license,proto3" json:"license,omitempty"`                    // Driver License.
	Class    string `protobuf:"bytes,4,opt,name=class,proto3" json:"class,omitempty"`                        // Driver Class.
}

func (x *UpdateDriverRequest) Reset() {
	*x = UpdateDriverRequest{}
	mi := &file_document_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverRequest) ProtoMessage() {}

func (x *UpdateDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverRequest.ProtoReflect.Descriptor instead.
func (*UpdateDriverRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateDriverRequest) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *UpdateDriverRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UpdateDriverRequest) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *UpdateDriverRequest) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

type UpdateDriverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdateDriverResponse) Reset() {
	*x = UpdateDriverResponse{}
	mi := &file_document_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDriverResponse) ProtoMessage() {}

func (x *UpdateDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDriverResponse.ProtoReflect.Descriptor instead.
func (*UpdateDriverResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateDriverResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteDriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId int64 `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"` // Driver ID.
}

func (x *DeleteDriverRequest) Reset() {
	*x = DeleteDriverRequest{}
	mi := &file_document_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDriverRequest) ProtoMessage() {}

func (x *DeleteDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDriverRequest.ProtoReflect.Descriptor instead.
func (*DeleteDriverRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{43}
}

func (x *DeleteDriverRequest) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

type DeleteDriverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeleteDriverResponse) Reset() {
	*x = DeleteDriverResponse{}
	mi := &file_document_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDriverResponse) ProtoMessage() {}

func (x *DeleteDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDriverResponse.ProtoReflect.Descriptor instead.
func (*DeleteDriverResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteDriverResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type OrganizationEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64  `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"` // Organization ID.
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                            // Organization Name.
	Address        string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                      // Organization Address.
	Chief          string `protobuf:"bytes,4,opt,name=chief,proto3" json:"chief,omitempty"`                                          // Organization Chief.
	FinChief       string `protobuf:"bytes,5,opt,name=fin_chief,json=finChief,proto3" json:"fin_chief,omitempty"`                    // Organization Financial Chief.
	InnKpp         string `protobuf:"bytes,6,opt,name=inn_kpp,json=innKpp,proto3" json:"inn_kpp,omitempty"`                          // Organization Inn/Kpp.
}

func (x *OrganizationEntity) Reset() {
	*x = OrganizationEntity{}
	mi := &file_document_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationEntity) ProtoMessage() {}

func (x *OrganizationEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationEntity.ProtoReflect.Descriptor instead.
func (*OrganizationEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{45}
}

func (x *OrganizationEntity) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *OrganizationEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrganizationEntity) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OrganizationEntity) GetChief() string {
	if x != nil {
		return x.Chief
	}
	return ""
}

func (x *OrganizationEntity) GetFinChief() string {
	if x != nil {
		return x.FinChief
	}
	return ""
}

func (x *OrganizationEntity) GetInnKpp() string {
	if x != nil {
		return x.InnKpp
	}
	return ""
}

type CreateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // Name of the created Organization.
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                   // Address of the created Organization.
	Chief    string `protobuf:"bytes,3,opt,name=chief,proto3" json:"chief,omitempty"`                       // Chief of the created Organization.
	FinChief string `protobuf:"bytes,4,opt,name=fin_chief,json=finChief,proto3" json:"fin_chief,omitempty"` //  Financial Chief of the created Organization.
	InnKpp   string `protobuf:"bytes,5,opt,name=inn_kpp,json=innKpp,proto3" json:"inn_kpp,omitempty"`       // Inn/Kpp of the created Organization.
}

func (x *CreateOrganizationRequest) Reset() {
	*x = CreateOrganizationRequest{}
	mi := &file_document_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationRequest) ProtoMessage() {}

func (x *CreateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{46}
}

func (x *CreateOrganizationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOrganizationRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateOrganizationRequest) GetChief() string {
	if x != nil {
		return x.Chief
	}
	return ""
}

func (x *CreateOrganizationRequest) GetFinChief() string {
	if x != nil {
		return x.FinChief
	}
	return ""
}

func (x *CreateOrganizationRequest) GetInnKpp() string {
	if x != nil {
		return x.InnKpp
	}
	return ""
}

type CreateOrganizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"` // ID of the created Organization.
}

func (x *CreateOrganizationResponse) Reset() {
	*x = CreateOrganizationResponse{}
	mi := &file_document_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrganizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationResponse) ProtoMessage() {}

func (x *CreateOrganizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationResponse.ProtoReflect.Descriptor instead.
func (*CreateOrganizationResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{47}
}

func (x *CreateOrganizationResponse) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type GetOrganizationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrganizationsRequest) Reset() {
	*x = GetOrganizationsRequest{}
	mi := &file_document_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrganizationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsRequest) ProtoMessage() {}

func (x *GetOrganizationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationsRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{48}
}

type GetOrganizationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*OrganizationEntity `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"` // List of Organizations.
}

func (x *GetOrganizationsResponse) Reset() {
	*x = GetOrganizationsResponse{}
	mi := &file_document_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrganizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationsResponse) ProtoMessage() {}

func (x *GetOrganizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationsResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationsResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{49}
}

func (x *GetOrganizationsResponse) GetOrganizations() []*OrganizationEntity {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type UpdateOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64  `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"` // Organization ID.
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                            // Organization Name.
	Address        string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                      // Organization Address.
	Chief          string `protobuf:"bytes,4,opt,name=chief,proto3" json:"chief,omitempty"`                                          // Organization Chief.
	FinChief       string `protobuf:"bytes,5,opt,name=fin_chief,json=finChief,proto3" json:"fin_chief,omitempty"`                    // Organization Financial Chief.
	InnKpp         string `protobuf:"bytes,6,opt,name=inn_kpp,json=innKpp,proto3" json:"inn_kpp,omitempty"`                          // Organization Inn/Kpp.
}

func (x *UpdateOrganizationRequest) Reset() {
	*x = UpdateOrganizationRequest{}
	mi := &file_document_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationRequest) ProtoMessage() {}

func (x *UpdateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateOrganizationRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *UpdateOrganizationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOrganizationRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateOrganizationRequest) GetChief() string {
	if x != nil {
		return x.Chief
	}
	return ""
}

func (x *UpdateOrganizationRequest) GetFinChief() string {
	if x != nil {
		return x.FinChief
	}
	return ""
}

func (x *UpdateOrganizationRequest) GetInnKpp() string {
	if x != nil {
		return x.InnKpp
	}
	return ""
}

type UpdateOrganizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdateOrganizationResponse) Reset() {
	*x = UpdateOrganizationResponse{}
	mi := &file_document_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrganizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationResponse) ProtoMessage() {}

func (x *UpdateOrganizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateOrganizationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteOrganizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"` // Organization ID.
}

func (x *DeleteOrganizationRequest) Reset() {
	*x = DeleteOrganizationRequest{}
	mi := &file_document_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationRequest) ProtoMessage() {}

func (x *DeleteOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteOrganizationRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type DeleteOrganizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeleteOrganizationResponse) Reset() {
	*x = DeleteOrganizationResponse{}
	mi := &file_document_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOrganizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrganizationResponse) ProtoMessage() {}

func (x *DeleteOrganizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrganizationResponse.ProtoReflect.Descriptor instead.
func (*DeleteOrganizationResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteOrganizationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BankAccountEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountId     int64  `protobuf:"varint,1,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`            // BankAccount ID.
	BankAccountNumber string `protobuf:"bytes,2,opt,name=bank_account_number,json=bankAccountNumber,proto3" json:"bank_account_number,omitempty"` // BankAccount Account Name.
	BankName          string `protobuf:"bytes,3,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`                              // BankAccount Bank Name.
	BankIdNumber      string `protobuf:"bytes,4,opt,name=bank_id_number,json=bankIdNumber,proto3" json:"bank_id_number,omitempty"`                // BankAccount Bank Identity Number.
	OrganizationId    int64  `protobuf:"varint,5,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`           // BankAccount Organization ID.
}

func (x *BankAccountEntity) Reset() {
	*x = BankAccountEntity{}
	mi := &file_document_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankAccountEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccountEntity) ProtoMessage() {}

func (x *BankAccountEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccountEntity.ProtoReflect.Descriptor instead.
func (*BankAccountEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{54}
}

func (x *BankAccountEntity) GetBankAccountId() int64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *BankAccountEntity) GetBankAccountNumber() string {
	if x != nil {
		return x.BankAccountNumber
	}
	return ""
}

func (x *BankAccountEntity) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *BankAccountEntity) GetBankIdNumber() string {
	if x != nil {
		return x.BankIdNumber
	}
	return ""
}

func (x *BankAccountEntity) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type CreateBankAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountNumber string `protobuf:"bytes,1,opt,name=bank_account_number,json=bankAccountNumber,proto3" json:"bank_account_number,omitempty"` // Account Number of the created BankAccount.
	BankName          string `protobuf:"bytes,2,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`                              // Bank Name of the created BankAccount.
	BankIdNumber      string `protobuf:"bytes,3,opt,name=bank_id_number,json=bankIdNumber,proto3" json:"bank_id_number,omitempty"`                // Bank Identity Number of the created BankAccount.
	OrganizationId    int64  `protobuf:"varint,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`           //  Organization ID of the created BankAccount.
}

func (x *CreateBankAccountRequest) Reset() {
	*x = CreateBankAccountRequest{}
	mi := &file_document_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBankAccountRequest) ProtoMessage() {}

func (x *CreateBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBankAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{55}
}

func (x *CreateBankAccountRequest) GetBankAccountNumber() string {
	if x != nil {
		return x.BankAccountNumber
	}
	return ""
}

func (x *CreateBankAccountRequest) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *CreateBankAccountRequest) GetBankIdNumber() string {
	if x != nil {
		return x.BankIdNumber
	}
	return ""
}

func (x *CreateBankAccountRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type CreateBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountId int64 `protobuf:"varint,1,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"` // ID of the created BankAccount.
}

func (x *CreateBankAccountResponse) Reset() {
	*x = CreateBankAccountResponse{}
	mi := &file_document_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBankAccountResponse) ProtoMessage() {}

func (x *CreateBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBankAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{56}
}

func (x *CreateBankAccountResponse) GetBankAccountId() int64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

type GetBankAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId int64 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"` //Organization ID.
}

func (x *GetBankAccountsRequest) Reset() {
	*x = GetBankAccountsRequest{}
	mi := &file_document_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBankAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankAccountsRequest) ProtoMessage() {}

func (x *GetBankAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetBankAccountsRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{57}
}

func (x *GetBankAccountsRequest) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

type GetBankAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccounts []*BankAccountEntity `protobuf:"bytes,1,rep,name=bank_accounts,json=bankAccounts,proto3" json:"bank_accounts,omitempty"` // List of BankAccounts.
}

func (x *GetBankAccountsResponse) Reset() {
	*x = GetBankAccountsResponse{}
	mi := &file_document_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBankAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBankAccountsResponse) ProtoMessage() {}

func (x *GetBankAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBankAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetBankAccountsResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{58}
}

func (x *GetBankAccountsResponse) GetBankAccounts() []*BankAccountEntity {
	if x != nil {
		return x.BankAccounts
	}
	return nil
}

type UpdateBankAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountId     int64  `protobuf:"varint,1,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`            // BankAccount ID.
	BankAccountNumber string `protobuf:"bytes,2,opt,name=bank_account_number,json=bankAccountNumber,proto3" json:"bank_account_number,omitempty"` // BankAccount Account Name.
	BankName          string `protobuf:"bytes,3,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`                              // BankAccount Bank Name.
	BankIdNumber      string `protobuf:"bytes,4,opt,name=bank_id_number,json=bankIdNumber,proto3" json:"bank_id_number,omitempty"`                // BankAccount Bank Identity Number.
}

func (x *UpdateBankAccountRequest) Reset() {
	*x = UpdateBankAccountRequest{}
	mi := &file_document_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBankAccountRequest) ProtoMessage() {}

func (x *UpdateBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBankAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateBankAccountRequest) GetBankAccountId() int64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *UpdateBankAccountRequest) GetBankAccountNumber() string {
	if x != nil {
		return x.BankAccountNumber
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetBankIdNumber() string {
	if x != nil {
		return x.BankIdNumber
	}
	return ""
}

type UpdateBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdateBankAccountResponse) Reset() {
	*x = UpdateBankAccountResponse{}
	mi := &file_document_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBankAccountResponse) ProtoMessage() {}

func (x *UpdateBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBankAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateBankAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteBankAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountId int64 `protobuf:"varint,1,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"` // BankAccount ID.
}

func (x *DeleteBankAccountRequest) Reset() {
	*x = DeleteBankAccountRequest{}
	mi := &file_document_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBankAccountRequest) ProtoMessage() {}

func (x *DeleteBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBankAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteBankAccountRequest) GetBankAccountId() int64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

type DeleteBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeleteBankAccountResponse) Reset() {
	*x = DeleteBankAccountResponse{}
	mi := &file_document_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBankAccountResponse) ProtoMessage() {}

func (x *DeleteBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBankAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteBankAccountResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PutlistEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistId     int64                `protobuf:"varint,1,opt,name=putlist_id,json=putlistId,proto3" json:"putlist_id,omitempty"`               // Putlist ID.
	UserId        int64                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                        // Putlist User ID.
	Number        int64                `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`                                      // Putlist Number.
	BankAccountId int64                `protobuf:"varint,4,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"` // Putlist BankAccount ID.
	DateWith      *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date_with,json=dateWith,proto3" json:"date_with,omitempty"`                   // Putlist Date With.
	DateFor       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date_for,json=dateFor,proto3" json:"date_for,omitempty"`                      // Putlist Date For.
	AutoId        int64                `protobuf:"varint,7,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`                        // Putlist Auto ID.
	DriverId      int64                `protobuf:"varint,8,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`                  // Putlist Driver ID.
	DispetcherId  int64                `protobuf:"varint,9,opt,name=dispetcher_id,json=dispetcherId,proto3" json:"dispetcher_id,omitempty"`      // Putlist Dispetcher ID.
	MehanicId     int64                `protobuf:"varint,10,opt,name=mehanic_id,json=mehanicId,proto3" json:"mehanic_id,omitempty"`              // Putlist Mehanic ID.
}

func (x *PutlistEntity) Reset() {
	*x = PutlistEntity{}
	mi := &file_document_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutlistEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutlistEntity) ProtoMessage() {}

func (x *PutlistEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutlistEntity.ProtoReflect.Descriptor instead.
func (*PutlistEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{63}
}

func (x *PutlistEntity) GetPutlistId() int64 {
	if x != nil {
		return x.PutlistId
	}
	return 0
}

func (x *PutlistEntity) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PutlistEntity) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PutlistEntity) GetBankAccountId() int64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *PutlistEntity) GetDateWith() *timestamp.Timestamp {
	if x != nil {
		return x.DateWith
	}
	return nil
}

func (x *PutlistEntity) GetDateFor() *timestamp.Timestamp {
	if x != nil {
		return x.DateFor
	}
	return nil
}

func (x *PutlistEntity) GetAutoId() int64 {
	if x != nil {
		return x.AutoId
	}
	return 0
}

func (x *PutlistEntity) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *PutlistEntity) GetDispetcherId() int64 {
	if x != nil {
		return x.DispetcherId
	}
	return 0
}

func (x *PutlistEntity) GetMehanicId() int64 {
	if x != nil {
		return x.MehanicId
	}
	return 0
}

type CreatePutlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64                `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                        // Putlist User ID.
	Number        int64                `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`                                      // Putlist Number.
	BankAccountId int64                `protobuf:"varint,3,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"` // Putlist BankAccount ID.
	DateWith      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date_with,json=dateWith,proto3" json:"date_with,omitempty"`                   // Putlist Date With.
	DateFor       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date_for,json=dateFor,proto3" json:"date_for,omitempty"`                      // Putlist Date For.
	AutoId        int64                `protobuf:"varint,6,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`                        // Putlist Auto ID.
	DriverId      int64                `protobuf:"varint,7,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`                  // Putlist Driver ID.
	DispetcherId  int64                `protobuf:"varint,8,opt,name=dispetcher_id,json=dispetcherId,proto3" json:"dispetcher_id,omitempty"`      // Putlist Dispetcher ID.
	MehanicId     int64                `protobuf:"varint,9,opt,name=mehanic_id,json=mehanicId,proto3" json:"mehanic_id,omitempty"`               // Putlist Mehanic ID.
}

func (x *CreatePutlistRequest) Reset() {
	*x = CreatePutlistRequest{}
	mi := &file_document_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePutlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePutlistRequest) ProtoMessage() {}

func (x *CreatePutlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePutlistRequest.ProtoReflect.Descriptor instead.
func (*CreatePutlistRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{64}
}

func (x *CreatePutlistRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreatePutlistRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CreatePutlistRequest) GetBankAccountId() int64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *CreatePutlistRequest) GetDateWith() *timestamp.Timestamp {
	if x != nil {
		return x.DateWith
	}
	return nil
}

func (x *CreatePutlistRequest) GetDateFor() *timestamp.Timestamp {
	if x != nil {
		return x.DateFor
	}
	return nil
}

func (x *CreatePutlistRequest) GetAutoId() int64 {
	if x != nil {
		return x.AutoId
	}
	return 0
}

func (x *CreatePutlistRequest) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *CreatePutlistRequest) GetDispetcherId() int64 {
	if x != nil {
		return x.DispetcherId
	}
	return 0
}

func (x *CreatePutlistRequest) GetMehanicId() int64 {
	if x != nil {
		return x.MehanicId
	}
	return 0
}

type CreatePutlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistId int64 `protobuf:"varint,1,opt,name=putlist_id,json=putlistId,proto3" json:"putlist_id,omitempty"` // ID of the created Putlist.
}

func (x *CreatePutlistResponse) Reset() {
	*x = CreatePutlistResponse{}
	mi := &file_document_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePutlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePutlistResponse) ProtoMessage() {}

func (x *CreatePutlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePutlistResponse.ProtoReflect.Descriptor instead.
func (*CreatePutlistResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{65}
}

func (x *CreatePutlistResponse) GetPutlistId() int64 {
	if x != nil {
		return x.PutlistId
	}
	return 0
}

type GetPutlistByNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Putlist User ID.
	Number int64 `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`               // Putlist Number.
}

func (x *GetPutlistByNumberRequest) Reset() {
	*x = GetPutlistByNumberRequest{}
	mi := &file_document_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPutlistByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutlistByNumberRequest) ProtoMessage() {}

func (x *GetPutlistByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutlistByNumberRequest.ProtoReflect.Descriptor instead.
func (*GetPutlistByNumberRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{66}
}

func (x *GetPutlistByNumberRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPutlistByNumberRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type GetPutlistByNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Putlist *PutlistEntity `protobuf:"bytes,1,opt,name=putlist,proto3" json:"putlist,omitempty"` // List of Putlists.
}

func (x *GetPutlistByNumberResponse) Reset() {
	*x = GetPutlistByNumberResponse{}
	mi := &file_document_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPutlistByNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutlistByNumberResponse) ProtoMessage() {}

func (x *GetPutlistByNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutlistByNumberResponse.ProtoReflect.Descriptor instead.
func (*GetPutlistByNumberResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{67}
}

func (x *GetPutlistByNumberResponse) GetPutlist() *PutlistEntity {
	if x != nil {
		return x.Putlist
	}
	return nil
}

type GetPutlistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Putlist User ID.
}

func (x *GetPutlistsRequest) Reset() {
	*x = GetPutlistsRequest{}
	mi := &file_document_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPutlistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutlistsRequest) ProtoMessage() {}

func (x *GetPutlistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutlistsRequest.ProtoReflect.Descriptor instead.
func (*GetPutlistsRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{68}
}

func (x *GetPutlistsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetPutlistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Putlists []*PutlistEntity `protobuf:"bytes,1,rep,name=putlists,proto3" json:"putlists,omitempty"` // Putlist.
}

func (x *GetPutlistsResponse) Reset() {
	*x = GetPutlistsResponse{}
	mi := &file_document_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPutlistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutlistsResponse) ProtoMessage() {}

func (x *GetPutlistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutlistsResponse.ProtoReflect.Descriptor instead.
func (*GetPutlistsResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{69}
}

func (x *GetPutlistsResponse) GetPutlists() []*PutlistEntity {
	if x != nil {
		return x.Putlists
	}
	return nil
}

type UpdatePutlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64                `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                        // Putlist User ID.
	Number        int64                `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`                                      // Putlist Number.
	BankAccountId int64                `protobuf:"varint,3,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"` // Putlist BankAccount ID.
	DateWith      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date_with,json=dateWith,proto3" json:"date_with,omitempty"`                   // Putlist Date With.
	DateFor       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date_for,json=dateFor,proto3" json:"date_for,omitempty"`                      // Putlist Date For.
	AutoId        int64                `protobuf:"varint,6,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`                        // Putlist Auto ID.
	DriverId      int64                `protobuf:"varint,7,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`                  // Putlist Driver ID.
	DispetcherId  int64                `protobuf:"varint,8,opt,name=dispetcher_id,json=dispetcherId,proto3" json:"dispetcher_id,omitempty"`      // Putlist Dispetcher ID.
	MehanicId     int64                `protobuf:"varint,9,opt,name=mehanic_id,json=mehanicId,proto3" json:"mehanic_id,omitempty"`               // Putlist Mehanic ID.
}

func (x *UpdatePutlistRequest) Reset() {
	*x = UpdatePutlistRequest{}
	mi := &file_document_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePutlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePutlistRequest) ProtoMessage() {}

func (x *UpdatePutlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePutlistRequest.ProtoReflect.Descriptor instead.
func (*UpdatePutlistRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{70}
}

func (x *UpdatePutlistRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdatePutlistRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *UpdatePutlistRequest) GetBankAccountId() int64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *UpdatePutlistRequest) GetDateWith() *timestamp.Timestamp {
	if x != nil {
		return x.DateWith
	}
	return nil
}

func (x *UpdatePutlistRequest) GetDateFor() *timestamp.Timestamp {
	if x != nil {
		return x.DateFor
	}
	return nil
}

func (x *UpdatePutlistRequest) GetAutoId() int64 {
	if x != nil {
		return x.AutoId
	}
	return 0
}

func (x *UpdatePutlistRequest) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *UpdatePutlistRequest) GetDispetcherId() int64 {
	if x != nil {
		return x.DispetcherId
	}
	return 0
}

func (x *UpdatePutlistRequest) GetMehanicId() int64 {
	if x != nil {
		return x.MehanicId
	}
	return 0
}

type UpdatePutlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdatePutlistResponse) Reset() {
	*x = UpdatePutlistResponse{}
	mi := &file_document_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePutlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePutlistResponse) ProtoMessage() {}

func (x *UpdatePutlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePutlistResponse.ProtoReflect.Descriptor instead.
func (*UpdatePutlistResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{71}
}

func (x *UpdatePutlistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeletePutlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Putlist User ID.
	Number int64 `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`               // Putlist number.
}

func (x *DeletePutlistRequest) Reset() {
	*x = DeletePutlistRequest{}
	mi := &file_document_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePutlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePutlistRequest) ProtoMessage() {}

func (x *DeletePutlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePutlistRequest.ProtoReflect.Descriptor instead.
func (*DeletePutlistRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{72}
}

func (x *DeletePutlistRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeletePutlistRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type DeletePutlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeletePutlistResponse) Reset() {
	*x = DeletePutlistResponse{}
	mi := &file_document_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePutlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePutlistResponse) ProtoMessage() {}

func (x *DeletePutlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePutlistResponse.ProtoReflect.Descriptor instead.
func (*DeletePutlistResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{73}
}

func (x *DeletePutlistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PutlistBodyEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistBodyId int64                `protobuf:"varint,1,opt,name=putlist_body_id,json=putlistBodyId,proto3" json:"putlist_body_id,omitempty"` // PutlistBody ID.
	PutlistNumber int64                `protobuf:"varint,2,opt,name=putlist_number,json=putlistNumber,proto3" json:"putlist_number,omitempty"`   // Putlist Number.
	Number        int64                `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`                                      // PutlistBody Number.
	ContragentId  int64                `protobuf:"varint,4,opt,name=contragent_id,json=contragentId,proto3" json:"contragent_id,omitempty"`      // PutlistBody Contragent ID.
	Item          string               `protobuf:"bytes,5,opt,name=item,proto3" json:"item,omitempty"`                                           // PutlistBody Item.
	TimeWith      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time_with,json=timeWith,proto3" json:"time_with,omitempty"`                   // PutlistBody Time With.
	TimeFor       *timestamp.Timestamp `protobuf:"bytes,7,opt,name=time_for,json=timeFor,proto3" json:"time_for,omitempty"`                      // PutlistBody Time For.
}

func (x *PutlistBodyEntity) Reset() {
	*x = PutlistBodyEntity{}
	mi := &file_document_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutlistBodyEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutlistBodyEntity) ProtoMessage() {}

func (x *PutlistBodyEntity) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutlistBodyEntity.ProtoReflect.Descriptor instead.
func (*PutlistBodyEntity) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{74}
}

func (x *PutlistBodyEntity) GetPutlistBodyId() int64 {
	if x != nil {
		return x.PutlistBodyId
	}
	return 0
}

func (x *PutlistBodyEntity) GetPutlistNumber() int64 {
	if x != nil {
		return x.PutlistNumber
	}
	return 0
}

func (x *PutlistBodyEntity) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PutlistBodyEntity) GetContragentId() int64 {
	if x != nil {
		return x.ContragentId
	}
	return 0
}

func (x *PutlistBodyEntity) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *PutlistBodyEntity) GetTimeWith() *timestamp.Timestamp {
	if x != nil {
		return x.TimeWith
	}
	return nil
}

func (x *PutlistBodyEntity) GetTimeFor() *timestamp.Timestamp {
	if x != nil {
		return x.TimeFor
	}
	return nil
}

type CreatePutlistBodyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistNumber int64                `protobuf:"varint,1,opt,name=putlist_number,json=putlistNumber,proto3" json:"putlist_number,omitempty"` // Putlist Number.
	Number        int64                `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`                                    // PutlistBody Number.
	ContragentId  int64                `protobuf:"varint,3,opt,name=contragent_id,json=contragentId,proto3" json:"contragent_id,omitempty"`    // PutlistBody Contragent ID.
	Item          string               `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`                                         // PutlistBody Item.
	TimeWith      *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time_with,json=timeWith,proto3" json:"time_with,omitempty"`                 // PutlistBody Time With.
	TimeFor       *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time_for,json=timeFor,proto3" json:"time_for,omitempty"`                    // PutlistBody Time For.
}

func (x *CreatePutlistBodyRequest) Reset() {
	*x = CreatePutlistBodyRequest{}
	mi := &file_document_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePutlistBodyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePutlistBodyRequest) ProtoMessage() {}

func (x *CreatePutlistBodyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePutlistBodyRequest.ProtoReflect.Descriptor instead.
func (*CreatePutlistBodyRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{75}
}

func (x *CreatePutlistBodyRequest) GetPutlistNumber() int64 {
	if x != nil {
		return x.PutlistNumber
	}
	return 0
}

func (x *CreatePutlistBodyRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CreatePutlistBodyRequest) GetContragentId() int64 {
	if x != nil {
		return x.ContragentId
	}
	return 0
}

func (x *CreatePutlistBodyRequest) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *CreatePutlistBodyRequest) GetTimeWith() *timestamp.Timestamp {
	if x != nil {
		return x.TimeWith
	}
	return nil
}

func (x *CreatePutlistBodyRequest) GetTimeFor() *timestamp.Timestamp {
	if x != nil {
		return x.TimeFor
	}
	return nil
}

type CreatePutlistBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistBodyId int64 `protobuf:"varint,1,opt,name=putlist_body_id,json=putlistBodyId,proto3" json:"putlist_body_id,omitempty"` // ID of the created PutlistBody.
}

func (x *CreatePutlistBodyResponse) Reset() {
	*x = CreatePutlistBodyResponse{}
	mi := &file_document_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePutlistBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePutlistBodyResponse) ProtoMessage() {}

func (x *CreatePutlistBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePutlistBodyResponse.ProtoReflect.Descriptor instead.
func (*CreatePutlistBodyResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{76}
}

func (x *CreatePutlistBodyResponse) GetPutlistBodyId() int64 {
	if x != nil {
		return x.PutlistBodyId
	}
	return 0
}

type GetPutlistBodiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistNumber int64 `protobuf:"varint,1,opt,name=putlist_number,json=putlistNumber,proto3" json:"putlist_number,omitempty"` // Putlist Number.
}

func (x *GetPutlistBodiesRequest) Reset() {
	*x = GetPutlistBodiesRequest{}
	mi := &file_document_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPutlistBodiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutlistBodiesRequest) ProtoMessage() {}

func (x *GetPutlistBodiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutlistBodiesRequest.ProtoReflect.Descriptor instead.
func (*GetPutlistBodiesRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{77}
}

func (x *GetPutlistBodiesRequest) GetPutlistNumber() int64 {
	if x != nil {
		return x.PutlistNumber
	}
	return 0
}

type GetPutlistBodiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistBodies []*PutlistBodyEntity `protobuf:"bytes,1,rep,name=putlist_bodies,json=putlistBodies,proto3" json:"putlist_bodies,omitempty"` // List of Putlist Bodies.
}

func (x *GetPutlistBodiesResponse) Reset() {
	*x = GetPutlistBodiesResponse{}
	mi := &file_document_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPutlistBodiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutlistBodiesResponse) ProtoMessage() {}

func (x *GetPutlistBodiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutlistBodiesResponse.ProtoReflect.Descriptor instead.
func (*GetPutlistBodiesResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{78}
}

func (x *GetPutlistBodiesResponse) GetPutlistBodies() []*PutlistBodyEntity {
	if x != nil {
		return x.PutlistBodies
	}
	return nil
}

type UpdatePutlistBodyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistBodyId int64                `protobuf:"varint,1,opt,name=putlist_body_id,json=putlistBodyId,proto3" json:"putlist_body_id,omitempty"` // PutlistBody ID.
	Number        int64                `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`                                      // PutlistBody Number.
	ContragentId  int64                `protobuf:"varint,4,opt,name=contragent_id,json=contragentId,proto3" json:"contragent_id,omitempty"`      // PutlistBody Contragent ID.
	Item          string               `protobuf:"bytes,5,opt,name=item,proto3" json:"item,omitempty"`                                           // PutlistBody Item.
	TimeWith      *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time_with,json=timeWith,proto3" json:"time_with,omitempty"`                   // PutlistBody Time With.
	TimeFor       *timestamp.Timestamp `protobuf:"bytes,7,opt,name=time_for,json=timeFor,proto3" json:"time_for,omitempty"`                      // PutlistBody Time For.
}

func (x *UpdatePutlistBodyRequest) Reset() {
	*x = UpdatePutlistBodyRequest{}
	mi := &file_document_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePutlistBodyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePutlistBodyRequest) ProtoMessage() {}

func (x *UpdatePutlistBodyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePutlistBodyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePutlistBodyRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{79}
}

func (x *UpdatePutlistBodyRequest) GetPutlistBodyId() int64 {
	if x != nil {
		return x.PutlistBodyId
	}
	return 0
}

func (x *UpdatePutlistBodyRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *UpdatePutlistBodyRequest) GetContragentId() int64 {
	if x != nil {
		return x.ContragentId
	}
	return 0
}

func (x *UpdatePutlistBodyRequest) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *UpdatePutlistBodyRequest) GetTimeWith() *timestamp.Timestamp {
	if x != nil {
		return x.TimeWith
	}
	return nil
}

func (x *UpdatePutlistBodyRequest) GetTimeFor() *timestamp.Timestamp {
	if x != nil {
		return x.TimeFor
	}
	return nil
}

type UpdatePutlistBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *UpdatePutlistBodyResponse) Reset() {
	*x = UpdatePutlistBodyResponse{}
	mi := &file_document_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePutlistBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePutlistBodyResponse) ProtoMessage() {}

func (x *UpdatePutlistBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePutlistBodyResponse.ProtoReflect.Descriptor instead.
func (*UpdatePutlistBodyResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{80}
}

func (x *UpdatePutlistBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeletePutlistBodyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutlistBodyId int64 `protobuf:"varint,1,opt,name=putlist_body_id,json=putlistBodyId,proto3" json:"putlist_body_id,omitempty"` // PutlistBody ID.
}

func (x *DeletePutlistBodyRequest) Reset() {
	*x = DeletePutlistBodyRequest{}
	mi := &file_document_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePutlistBodyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePutlistBodyRequest) ProtoMessage() {}

func (x *DeletePutlistBodyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePutlistBodyRequest.ProtoReflect.Descriptor instead.
func (*DeletePutlistBodyRequest) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{81}
}

func (x *DeletePutlistBodyRequest) GetPutlistBodyId() int64 {
	if x != nil {
		return x.PutlistBodyId
	}
	return 0
}

type DeletePutlistBodyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Request status message.
}

func (x *DeletePutlistBodyResponse) Reset() {
	*x = DeletePutlistBodyResponse{}
	mi := &file_document_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePutlistBodyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePutlistBodyResponse) ProtoMessage() {}

func (x *DeletePutlistBodyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_document_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePutlistBodyResponse.ProtoReflect.Descriptor instead.
func (*DeletePutlistBodyResponse) Descriptor() ([]byte, []int) {
	return file_document_proto_rawDescGZIP(), []int{82}
}

func (x *DeletePutlistBodyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_document_proto protoreflect.FileDescriptor

var file_document_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x0a, 0x41,
	0x75, 0x74, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x75, 0x74, 0x6f,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x62, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x6f, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x61,
	0x75, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x05, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x22, 0x7b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x75, 0x74, 0x6f,
	0x49, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x7e, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x6e,
	0x5f, 0x6b, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x6e, 0x4b,
	0x70, 0x70, 0x22, 0x60, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6e, 0x6e, 0x5f, 0x6b, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e,
	0x6e, 0x4b, 0x70, 0x70, 0x22, 0x3f, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x6e, 0x5f, 0x6b, 0x70, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x6e, 0x4b, 0x70, 0x70, 0x22, 0x34,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x36, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0x5b, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70,
	0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x0d, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x33, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65,
	0x68, 0x61, 0x6e, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x73, 0x22,
	0x52, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x68, 0x61, 0x6e,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x22, 0x31, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x78, 0x0a, 0x0c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x62, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x33,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x07, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x22, 0x7f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x65, 0x66,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x69, 0x65, 0x66, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x69, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6e, 0x43, 0x68, 0x69, 0x65, 0x66, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e,
	0x6e, 0x5f, 0x6b, 0x70, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x6e,
	0x4b, 0x70, 0x70, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x68, 0x69, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x69,
	0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x43, 0x68, 0x69,
	0x65, 0x66, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x6e, 0x5f, 0x6b, 0x70, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x6e, 0x4b, 0x70, 0x70, 0x22, 0x45, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbe, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x68, 0x69, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x5f,
	0x63, 0x68, 0x69, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6e,
	0x43, 0x68, 0x69, 0x65, 0x66, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x6e, 0x5f, 0x6b, 0x70, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x6e, 0x4b, 0x70, 0x70, 0x22, 0x36,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x11, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb6,
	0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xb5, 0x01, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e,
	0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf1, 0x02, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x22, 0xd9, 0x02, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x65,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x68, 0x61, 0x6e,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4c,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x75,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x68, 0x61, 0x6e,
	0x69, 0x63, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xa3, 0x02, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42,
	0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x75, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x22, 0x82, 0x02, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x37,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x57, 0x69, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x22, 0x43,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42,
	0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64,
	0x79, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42,
	0x6f, 0x64, 0x69, 0x65, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x6f,
	0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x22, 0x35, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x42, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x6f, 0x64, 0x79, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xa4, 0x02,
	0x0a, 0x04, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x47, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x12, 0x19, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf2, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf2, 0x02, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73,
	0x70, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x65, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70,
	0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xcb,
	0x02, 0x0a, 0x07, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x12, 0x1e, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x12, 0x1e, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x68, 0x61, 0x6e, 0x69, 0x63, 0x12, 0x1e, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x68,
	0x61, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbe, 0x02, 0x0a,
	0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x1d, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1d,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8c, 0x03,
	0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xff, 0x02, 0x0a,
	0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xac,
	0x03, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x83, 0x03,
	0x0a, 0x0b, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x5c, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42,
	0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73,
	0x12, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x75, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x1e, 0x5a, 0x1c, 0x44, 0x61, 0x76, 0x69, 0x64, 0x47, 0x39, 0x39, 0x39,
	0x39, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x3b, 0x64, 0x6f,
	0x63, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_document_proto_rawDescOnce sync.Once
	file_document_proto_rawDescData = file_document_proto_rawDesc
)

func file_document_proto_rawDescGZIP() []byte {
	file_document_proto_rawDescOnce.Do(func() {
		file_document_proto_rawDescData = protoimpl.X.CompressGZIP(file_document_proto_rawDescData)
	})
	return file_document_proto_rawDescData
}

var file_document_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_document_proto_goTypes = []any{
	(*AutoEntity)(nil),                 // 0: document.AutoEntity
	(*CreateAutoRequest)(nil),          // 1: document.CreateAutoRequest
	(*CreateAutoResponse)(nil),         // 2: document.CreateAutoResponse
	(*GetAutosRequest)(nil),            // 3: document.GetAutosRequest
	(*GetAutosResponse)(nil),           // 4: document.GetAutosResponse
	(*UpdateAutoRequest)(nil),          // 5: document.UpdateAutoRequest
	(*UpdateAutoResponse)(nil),         // 6: document.UpdateAutoResponse
	(*DeleteAutoRequest)(nil),          // 7: document.DeleteAutoRequest
	(*DeleteAutoResponse)(nil),         // 8: document.DeleteAutoResponse
	(*ContragentEntity)(nil),           // 9: document.ContragentEntity
	(*CreateContragentRequest)(nil),    // 10: document.CreateContragentRequest
	(*CreateContragentResponse)(nil),   // 11: document.CreateContragentResponse
	(*GetContragentsRequest)(nil),      // 12: document.GetContragentsRequest
	(*GetContragentsResponse)(nil),     // 13: document.GetContragentsResponse
	(*UpdateContragentRequest)(nil),    // 14: document.UpdateContragentRequest
	(*UpdateContragentResponse)(nil),   // 15: document.UpdateContragentResponse
	(*DeleteContragentRequest)(nil),    // 16: document.DeleteContragentRequest
	(*DeleteContragentResponse)(nil),   // 17: document.DeleteContragentResponse
	(*DispetcherEntity)(nil),           // 18: document.DispetcherEntity
	(*CreateDispetcherRequest)(nil),    // 19: document.CreateDispetcherRequest
	(*CreateDispetcherResponse)(nil),   // 20: document.CreateDispetcherResponse
	(*GetDispetchersRequest)(nil),      // 21: document.GetDispetchersRequest
	(*GetDispetchersResponse)(nil),     // 22: document.GetDispetchersResponse
	(*UpdateDispetcherRequest)(nil),    // 23: document.UpdateDispetcherRequest
	(*UpdateDispetcherResponse)(nil),   // 24: document.UpdateDispetcherResponse
	(*DeleteDispetcherRequest)(nil),    // 25: document.DeleteDispetcherRequest
	(*DeleteDispetcherResponse)(nil),   // 26: document.DeleteDispetcherResponse
	(*MehanicEntity)(nil),              // 27: document.MehanicEntity
	(*CreateMehanicRequest)(nil),       // 28: document.CreateMehanicRequest
	(*CreateMehanicResponse)(nil),      // 29: document.CreateMehanicResponse
	(*GetMehanicsRequest)(nil),         // 30: document.GetMehanicsRequest
	(*GetMehanicsResponse)(nil),        // 31: document.GetMehanicsResponse
	(*UpdateMehanicRequest)(nil),       // 32: document.UpdateMehanicRequest
	(*UpdateMehanicResponse)(nil),      // 33: document.UpdateMehanicResponse
	(*DeleteMehanicRequest)(nil),       // 34: document.DeleteMehanicRequest
	(*DeleteMehanicResponse)(nil),      // 35: document.DeleteMehanicResponse
	(*DriverEntity)(nil),               // 36: document.DriverEntity
	(*CreateDriverRequest)(nil),        // 37: document.CreateDriverRequest
	(*CreateDriverResponse)(nil),       // 38: document.CreateDriverResponse
	(*GetDriversRequest)(nil),          // 39: document.GetDriversRequest
	(*GetDriversResponse)(nil),         // 40: document.GetDriversResponse
	(*UpdateDriverRequest)(nil),        // 41: document.UpdateDriverRequest
	(*UpdateDriverResponse)(nil),       // 42: document.UpdateDriverResponse
	(*DeleteDriverRequest)(nil),        // 43: document.DeleteDriverRequest
	(*DeleteDriverResponse)(nil),       // 44: document.DeleteDriverResponse
	(*OrganizationEntity)(nil),         // 45: document.OrganizationEntity
	(*CreateOrganizationRequest)(nil),  // 46: document.CreateOrganizationRequest
	(*CreateOrganizationResponse)(nil), // 47: document.CreateOrganizationResponse
	(*GetOrganizationsRequest)(nil),    // 48: document.GetOrganizationsRequest
	(*GetOrganizationsResponse)(nil),   // 49: document.GetOrganizationsResponse
	(*UpdateOrganizationRequest)(nil),  // 50: document.UpdateOrganizationRequest
	(*UpdateOrganizationResponse)(nil), // 51: document.UpdateOrganizationResponse
	(*DeleteOrganizationRequest)(nil),  // 52: document.DeleteOrganizationRequest
	(*DeleteOrganizationResponse)(nil), // 53: document.DeleteOrganizationResponse
	(*BankAccountEntity)(nil),          // 54: document.BankAccountEntity
	(*CreateBankAccountRequest)(nil),   // 55: document.CreateBankAccountRequest
	(*CreateBankAccountResponse)(nil),  // 56: document.CreateBankAccountResponse
	(*GetBankAccountsRequest)(nil),     // 57: document.GetBankAccountsRequest
	(*GetBankAccountsResponse)(nil),    // 58: document.GetBankAccountsResponse
	(*UpdateBankAccountRequest)(nil),   // 59: document.UpdateBankAccountRequest
	(*UpdateBankAccountResponse)(nil),  // 60: document.UpdateBankAccountResponse
	(*DeleteBankAccountRequest)(nil),   // 61: document.DeleteBankAccountRequest
	(*DeleteBankAccountResponse)(nil),  // 62: document.DeleteBankAccountResponse
	(*PutlistEntity)(nil),              // 63: document.PutlistEntity
	(*CreatePutlistRequest)(nil),       // 64: document.CreatePutlistRequest
	(*CreatePutlistResponse)(nil),      // 65: document.CreatePutlistResponse
	(*GetPutlistByNumberRequest)(nil),  // 66: document.GetPutlistByNumberRequest
	(*GetPutlistByNumberResponse)(nil), // 67: document.GetPutlistByNumberResponse
	(*GetPutlistsRequest)(nil),         // 68: document.GetPutlistsRequest
	(*GetPutlistsResponse)(nil),        // 69: document.GetPutlistsResponse
	(*UpdatePutlistRequest)(nil),       // 70: document.UpdatePutlistRequest
	(*UpdatePutlistResponse)(nil),      // 71: document.UpdatePutlistResponse
	(*DeletePutlistRequest)(nil),       // 72: document.DeletePutlistRequest
	(*DeletePutlistResponse)(nil),      // 73: document.DeletePutlistResponse
	(*PutlistBodyEntity)(nil),          // 74: document.PutlistBodyEntity
	(*CreatePutlistBodyRequest)(nil),   // 75: document.CreatePutlistBodyRequest
	(*CreatePutlistBodyResponse)(nil),  // 76: document.CreatePutlistBodyResponse
	(*GetPutlistBodiesRequest)(nil),    // 77: document.GetPutlistBodiesRequest
	(*GetPutlistBodiesResponse)(nil),   // 78: document.GetPutlistBodiesResponse
	(*UpdatePutlistBodyRequest)(nil),   // 79: document.UpdatePutlistBodyRequest
	(*UpdatePutlistBodyResponse)(nil),  // 80: document.UpdatePutlistBodyResponse
	(*DeletePutlistBodyRequest)(nil),   // 81: document.DeletePutlistBodyRequest
	(*DeletePutlistBodyResponse)(nil),  // 82: document.DeletePutlistBodyResponse
	(*timestamp.Timestamp)(nil),        // 83: google.protobuf.Timestamp
}
var file_document_proto_depIdxs = []int32{
	0,  // 0: document.GetAutosResponse.autos:type_name -> document.AutoEntity
	9,  // 1: document.GetContragentsResponse.contragents:type_name -> document.ContragentEntity
	18, // 2: document.GetDispetchersResponse.dispetchers:type_name -> document.DispetcherEntity
	27, // 3: document.GetMehanicsResponse.mehanics:type_name -> document.MehanicEntity
	36, // 4: document.GetDriversResponse.drivers:type_name -> document.DriverEntity
	45, // 5: document.GetOrganizationsResponse.organizations:type_name -> document.OrganizationEntity
	54, // 6: document.GetBankAccountsResponse.bank_accounts:type_name -> document.BankAccountEntity
	83, // 7: document.PutlistEntity.date_with:type_name -> google.protobuf.Timestamp
	83, // 8: document.PutlistEntity.date_for:type_name -> google.protobuf.Timestamp
	83, // 9: document.CreatePutlistRequest.date_with:type_name -> google.protobuf.Timestamp
	83, // 10: document.CreatePutlistRequest.date_for:type_name -> google.protobuf.Timestamp
	63, // 11: document.GetPutlistByNumberResponse.putlist:type_name -> document.PutlistEntity
	63, // 12: document.GetPutlistsResponse.putlists:type_name -> document.PutlistEntity
	83, // 13: document.UpdatePutlistRequest.date_with:type_name -> google.protobuf.Timestamp
	83, // 14: document.UpdatePutlistRequest.date_for:type_name -> google.protobuf.Timestamp
	83, // 15: document.PutlistBodyEntity.time_with:type_name -> google.protobuf.Timestamp
	83, // 16: document.PutlistBodyEntity.time_for:type_name -> google.protobuf.Timestamp
	83, // 17: document.CreatePutlistBodyRequest.time_with:type_name -> google.protobuf.Timestamp
	83, // 18: document.CreatePutlistBodyRequest.time_for:type_name -> google.protobuf.Timestamp
	74, // 19: document.GetPutlistBodiesResponse.putlist_bodies:type_name -> document.PutlistBodyEntity
	83, // 20: document.UpdatePutlistBodyRequest.time_with:type_name -> google.protobuf.Timestamp
	83, // 21: document.UpdatePutlistBodyRequest.time_for:type_name -> google.protobuf.Timestamp
	1,  // 22: document.Auto.CreateAuto:input_type -> document.CreateAutoRequest
	3,  // 23: document.Auto.GetAutos:input_type -> document.GetAutosRequest
	5,  // 24: document.Auto.UpdateAuto:input_type -> document.UpdateAutoRequest
	7,  // 25: document.Auto.DeleteAuto:input_type -> document.DeleteAutoRequest
	10, // 26: document.Contragent.CreateContragent:input_type -> document.CreateContragentRequest
	12, // 27: document.Contragent.GetContragents:input_type -> document.GetContragentsRequest
	14, // 28: document.Contragent.UpdateContragent:input_type -> document.UpdateContragentRequest
	16, // 29: document.Contragent.DeleteContragent:input_type -> document.DeleteContragentRequest
	19, // 30: document.Dispetcher.CreateDispetcher:input_type -> document.CreateDispetcherRequest
	21, // 31: document.Dispetcher.GetDispetchers:input_type -> document.GetDispetchersRequest
	23, // 32: document.Dispetcher.UpdateDispetcher:input_type -> document.UpdateDispetcherRequest
	25, // 33: document.Dispetcher.DeleteDispetcher:input_type -> document.DeleteDispetcherRequest
	28, // 34: document.Mehanic.CreateMehanic:input_type -> document.CreateMehanicRequest
	30, // 35: document.Mehanic.GetMehanics:input_type -> document.GetMehanicsRequest
	32, // 36: document.Mehanic.UpdateMehanic:input_type -> document.UpdateMehanicRequest
	34, // 37: document.Mehanic.DeleteMehanic:input_type -> document.DeleteMehanicRequest
	37, // 38: document.Driver.CreateDriver:input_type -> document.CreateDriverRequest
	39, // 39: document.Driver.GetDrivers:input_type -> document.GetDriversRequest
	41, // 40: document.Driver.UpdateDriver:input_type -> document.UpdateDriverRequest
	43, // 41: document.Driver.DeleteDriver:input_type -> document.DeleteDriverRequest
	46, // 42: document.Organization.CreateOrganization:input_type -> document.CreateOrganizationRequest
	48, // 43: document.Organization.GetOrganizations:input_type -> document.GetOrganizationsRequest
	50, // 44: document.Organization.UpdateOrganization:input_type -> document.UpdateOrganizationRequest
	52, // 45: document.Organization.DeleteOrganization:input_type -> document.DeleteOrganizationRequest
	55, // 46: document.BankAccount.CreateBankAccount:input_type -> document.CreateBankAccountRequest
	57, // 47: document.BankAccount.GetBankAccounts:input_type -> document.GetBankAccountsRequest
	59, // 48: document.BankAccount.UpdateBankAccount:input_type -> document.UpdateBankAccountRequest
	61, // 49: document.BankAccount.DeleteBankAccount:input_type -> document.DeleteBankAccountRequest
	64, // 50: document.Putlist.CreatePutlist:input_type -> document.CreatePutlistRequest
	68, // 51: document.Putlist.GetPutlists:input_type -> document.GetPutlistsRequest
	66, // 52: document.Putlist.GetPutlistByNumber:input_type -> document.GetPutlistByNumberRequest
	70, // 53: document.Putlist.UpdatePutlist:input_type -> document.UpdatePutlistRequest
	72, // 54: document.Putlist.DeletePutlist:input_type -> document.DeletePutlistRequest
	75, // 55: document.PutlistBody.CreatePutlistBody:input_type -> document.CreatePutlistBodyRequest
	77, // 56: document.PutlistBody.GetPutlistsBodies:input_type -> document.GetPutlistBodiesRequest
	79, // 57: document.PutlistBody.UpdatePutlistBody:input_type -> document.UpdatePutlistBodyRequest
	81, // 58: document.PutlistBody.DeletePutlistBody:input_type -> document.DeletePutlistBodyRequest
	2,  // 59: document.Auto.CreateAuto:output_type -> document.CreateAutoResponse
	4,  // 60: document.Auto.GetAutos:output_type -> document.GetAutosResponse
	6,  // 61: document.Auto.UpdateAuto:output_type -> document.UpdateAutoResponse
	8,  // 62: document.Auto.DeleteAuto:output_type -> document.DeleteAutoResponse
	11, // 63: document.Contragent.CreateContragent:output_type -> document.CreateContragentResponse
	13, // 64: document.Contragent.GetContragents:output_type -> document.GetContragentsResponse
	15, // 65: document.Contragent.UpdateContragent:output_type -> document.UpdateContragentResponse
	17, // 66: document.Contragent.DeleteContragent:output_type -> document.DeleteContragentResponse
	20, // 67: document.Dispetcher.CreateDispetcher:output_type -> document.CreateDispetcherResponse
	22, // 68: document.Dispetcher.GetDispetchers:output_type -> document.GetDispetchersResponse
	24, // 69: document.Dispetcher.UpdateDispetcher:output_type -> document.UpdateDispetcherResponse
	26, // 70: document.Dispetcher.DeleteDispetcher:output_type -> document.DeleteDispetcherResponse
	29, // 71: document.Mehanic.CreateMehanic:output_type -> document.CreateMehanicResponse
	31, // 72: document.Mehanic.GetMehanics:output_type -> document.GetMehanicsResponse
	33, // 73: document.Mehanic.UpdateMehanic:output_type -> document.UpdateMehanicResponse
	35, // 74: document.Mehanic.DeleteMehanic:output_type -> document.DeleteMehanicResponse
	38, // 75: document.Driver.CreateDriver:output_type -> document.CreateDriverResponse
	40, // 76: document.Driver.GetDrivers:output_type -> document.GetDriversResponse
	42, // 77: document.Driver.UpdateDriver:output_type -> document.UpdateDriverResponse
	44, // 78: document.Driver.DeleteDriver:output_type -> document.DeleteDriverResponse
	47, // 79: document.Organization.CreateOrganization:output_type -> document.CreateOrganizationResponse
	49, // 80: document.Organization.GetOrganizations:output_type -> document.GetOrganizationsResponse
	51, // 81: document.Organization.UpdateOrganization:output_type -> document.UpdateOrganizationResponse
	53, // 82: document.Organization.DeleteOrganization:output_type -> document.DeleteOrganizationResponse
	56, // 83: document.BankAccount.CreateBankAccount:output_type -> document.CreateBankAccountResponse
	58, // 84: document.BankAccount.GetBankAccounts:output_type -> document.GetBankAccountsResponse
	60, // 85: document.BankAccount.UpdateBankAccount:output_type -> document.UpdateBankAccountResponse
	62, // 86: document.BankAccount.DeleteBankAccount:output_type -> document.DeleteBankAccountResponse
	65, // 87: document.Putlist.CreatePutlist:output_type -> document.CreatePutlistResponse
	69, // 88: document.Putlist.GetPutlists:output_type -> document.GetPutlistsResponse
	67, // 89: document.Putlist.GetPutlistByNumber:output_type -> document.GetPutlistByNumberResponse
	71, // 90: document.Putlist.UpdatePutlist:output_type -> document.UpdatePutlistResponse
	73, // 91: document.Putlist.DeletePutlist:output_type -> document.DeletePutlistResponse
	76, // 92: document.PutlistBody.CreatePutlistBody:output_type -> document.CreatePutlistBodyResponse
	78, // 93: document.PutlistBody.GetPutlistsBodies:output_type -> document.GetPutlistBodiesResponse
	80, // 94: document.PutlistBody.UpdatePutlistBody:output_type -> document.UpdatePutlistBodyResponse
	82, // 95: document.PutlistBody.DeletePutlistBody:output_type -> document.DeletePutlistBodyResponse
	59, // [59:96] is the sub-list for method output_type
	22, // [22:59] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_document_proto_init() }
func file_document_proto_init() {
	if File_document_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_document_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   9,
		},
		GoTypes:           file_document_proto_goTypes,
		DependencyIndexes: file_document_proto_depIdxs,
		MessageInfos:      file_document_proto_msgTypes,
	}.Build()
	File_document_proto = out.File
	file_document_proto_rawDesc = nil
	file_document_proto_goTypes = nil
	file_document_proto_depIdxs = nil
}
